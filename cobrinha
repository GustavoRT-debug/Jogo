<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
        .snake-game {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 400px;
            height: 400px;
            border: 2px solid #000;
            position: relative;
            overflow: hidden;
        }

        .snake {
            position: absolute;
            background-color: green;
        }

        .food {
            position: absolute;
            background-color: red;
        }
    </style>
</head>
<body>
    <div class="snake-game" id="snakeGame">
        <div class="snake" id="snake"></div>
        <div class="food" id="food"></div>
    </div>

    <script>
        const snakeGame = document.getElementById("snakeGame");
        const snakeElement = document.getElementById("snake");
        const foodElement = document.getElementById("food");

        const boxSize = 20;
        const gameSize = 20;

        let snake = [{ x: 10, y: 10 }];
        let food = { x: Math.floor(Math.random() * gameSize), y: Math.floor(Math.random() * gameSize) };
        let dx = 0;
        let dy = 0;

        function update() {
            const head = { x: snake[0].x + dx, y: snake[0].y + dy };
            snake.unshift(head);

            if (head.x === food.x && head.y === food.y) {
                food.x = Math.floor(Math.random() * gameSize);
                food.y = Math.floor(Math.random() * gameSize);
            } else {
                snake.pop();
            }

            if (head.x < 0 || head.x >= gameSize || head.y < 0 || head.y >= gameSize || collision()) {
                alert("Game Over!");
                restartGame();
            }

            draw();
        }

        function draw() {
            snakeElement.innerHTML = "";
            snake.forEach(segment => {
                const snakeSegment = document.createElement("div");
                snakeSegment.style.width = `${boxSize}px`;
                snakeSegment.style.height = `${boxSize}px`;
                snakeSegment.style.backgroundColor = "green";
                snakeSegment.style.position = "absolute";
                snakeSegment.style.left = `${segment.x * boxSize}px`;
                snakeSegment.style.top = `${segment.y * boxSize}px`;
                snakeElement.appendChild(snakeSegment);
            });

            foodElement.style.width = `${boxSize}px`;
            foodElement.style.height = `${boxSize}px`;
            foodElement.style.backgroundColor = "red";
            foodElement.style.position = "absolute";
            foodElement.style.left = `${food.x * boxSize}px`;
            foodElement.style.top = `${food.y * boxSize}px`;
        }

        function collision() {
            return snake.slice(1).some(segment => {
                return segment.x === snake[0].x && segment.y === snake[0].y;
            });
        }

        function restartGame() {
            snake = [{ x: 10, y: 10 }];
            dx = 0;
            dy = 0;
            food = { x: Math.floor(Math.random() * gameSize), y: Math.floor(Math.random() * gameSize) };
            draw();
        }

        document.addEventListener("keydown", event => {
            if (event.key === "ArrowUp" && dy !== 1) {
                dx = 0;
                dy = -1;
            } else if (event.key === "ArrowDown" && dy !== -1) {
                dx = 0;
                dy = 1;
            } else if (event.key === "ArrowLeft" && dx !== 1) {
                dx = -1;
                dy = 0;
            } else if (event.key === "ArrowRight" && dx !== -1) {
                dx = 1;
                dy = 0;
            }
        });

        setInterval(update, 100);
    </script>
</body>
</html>
